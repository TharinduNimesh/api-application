FROM php:8.3-apache

# Install system dependencies
RUN apt-get update && apt-get install -y \
    git \
    curl \
    libpng-dev \
    libzip-dev \
    zip \
    unzip \
    nodejs \
    npm \
    libonig-dev \
    libxml2-dev \
    libssl-dev \
    ssl-cert \
    openssl

# Generate SSL certificates and set up SSL
RUN mkdir -p /etc/apache2/ssl && \
    openssl req -x509 -nodes -days 365 -newkey rsa:2048 \
    -keyout /etc/apache2/ssl/server.key \
    -out /etc/apache2/ssl/server.crt \
    -subj "/C=LK/ST=Western/L=Colombo/O=Eversoft/CN=apiforge.eversoft.lk" && \
    chmod 755 /etc/apache2/ssl && \
    chmod 644 /etc/apache2/ssl/server.crt && \
    chmod 644 /etc/apache2/ssl/server.key && \
    chown -R root:www-data /etc/apache2/ssl && \
    usermod -aG ssl-cert www-data

# Install PHP extensions
RUN pecl install mongodb \
    && docker-php-ext-enable mongodb \
    && docker-php-ext-install zip pdo_mysql

# Enable Apache modules
RUN a2enmod rewrite headers ssl

# Clear cache
RUN apt-get clean && rm -rf /var/lib/apt/lists/*

# Install Composer
COPY --from=composer:latest /usr/bin/composer /usr/bin/composer

# Set working directory
WORKDIR /var/www/html

# Copy application files
COPY . .

# Create storage structure and set permissions
RUN mkdir -p storage/framework/{sessions,views,cache} \
    && mkdir -p storage/logs \
    && chown -R www-data:www-data . \
    && chmod -R 775 storage bootstrap/cache \
    && find storage -type d -exec chmod 775 {} \; \
    && find storage -type f -exec chmod 664 {} \; \
    && chmod -R ug+s storage \
    && touch storage/logs/laravel.log \
    && chmod 664 storage/logs/laravel.log \
    && chown -R www-data:www-data storage

# Install PHP dependencies
RUN composer install --no-interaction --optimize-autoloader --no-dev

# Install and build frontend assets
RUN npm ci && npm run build && rm -rf node_modules

# Set production environment
ENV APP_ENV=production
ENV VITE_MANIFEST=true

# Configure Apache
COPY docker/apache/000-default.conf /etc/apache2/sites-available/000-default.conf

# Run Laravel optimization commands
RUN php artisan key:generate && \
    php artisan config:cache && \
    php artisan route:cache && \
    php artisan view:cache

# Change ownership to Apache user
RUN chown -R www-data:www-data /var/www/html

# Expose port
EXPOSE 80

# Start Apache
CMD ["apache2-foreground"]