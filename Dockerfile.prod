FROM php:8.3-fpm-alpine

# Install system dependencies
RUN apk add --no-cache \
    git \
    curl \
    libpng-dev \
    libzip-dev \
    zip \
    unzip \
    nginx \
    supervisor \
    nodejs \
    npm \
    oniguruma-dev \
    libxml2-dev \
    openssl-dev

# Install PHP extensions
RUN apk add --no-cache --virtual .build-deps $PHPIZE_DEPS \
    && pecl install mongodb \
    && docker-php-ext-enable mongodb \
    && docker-php-ext-install zip \
    && apk del .build-deps

# Install Composer
COPY --from=composer:2 /usr/bin/composer /usr/bin/composer

# Set working directory
WORKDIR /var/www/html

# Copy application files
COPY . .

# Create storage structure and set permissions
RUN mkdir -p storage/framework/{sessions,views,cache} \
    && mkdir -p storage/logs \
    && chown -R www-data:www-data . \
    && chmod -R 775 storage bootstrap/cache

# Install PHP dependencies
RUN composer install --no-interaction --optimize-autoloader --no-dev

# Install and build frontend assets
RUN npm ci && npm run build && rm -rf node_modules

# Set production environment
ENV APP_ENV=production
ENV VITE_MANIFEST=true

# Configure Nginx
RUN mkdir -p /run/nginx
COPY docker/nginx/default.conf /etc/nginx/http.d/default.conf

# Configure supervisor
RUN mkdir -p /etc/supervisor/conf.d
COPY docker/supervisor/supervisord.conf /etc/supervisor/conf.d/supervisord.conf

# Run Laravel optimization commands
RUN php artisan config:cache && \
    php artisan route:cache && \
    php artisan view:cache

# Change PHP-FPM user to match www-data
RUN sed -i "s/user = www-data/user = nobody/g" /usr/local/etc/php-fpm.d/www.conf && \
    sed -i "s/group = www-data/group = nobody/g" /usr/local/etc/php-fpm.d/www.conf

# Final permission setup
RUN chown -R nobody:nobody /var/www/html

# Expose port
EXPOSE 80

# Start services
CMD ["/usr/bin/supervisord", "-c", "/etc/supervisor/conf.d/supervisord.conf"]